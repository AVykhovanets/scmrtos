//********************************************************************************
//*
//*     FULLNAME:  Single-Chip Microcontroller Real-Time Operating System
//*
//*     NICKNAME:  scmRTOS
//*
//*     PROCESSOR: MSP430 (Texas Instruments)
//*
//*     TOOLKIT:   EW430 (IAR Systems)
//*               
//*     PURPOSE:   Target Dependent Low-Level Stuff
//*               
//*     Version:   3.00-beta
//*
//*     $Revision$
//*     $Date$
//*
//*     Copyright (c) 2003-2006, Harry E. Zhurov
//*
//*     =================================================================
//*     scmRTOS is free software; you can redistribute it and/or
//*     modify it under the terms of the GNU General Public License
//*     as published by the Free Software Foundation; either version 2
//*     of the License, or (at your option) any later version.
//*
//*     This program is distributed in the hope that it will be useful,
//*     but WITHOUT ANY WARRANTY; without even the implied warranty of
//*     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//*     GNU General Public License for more details.
//*
//*     You should have received a copy of the GNU General Public License
//*     along with this program; if not, write to the Free Software
//*     Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
//*     MA  02110-1301, USA.
//*     =================================================================
//*
//*     =================================================================
//*     See http://scmrtos.sourceforge.net for documentation, latest
//*     information, license and contact details.
//*     =================================================================
//*
//********************************************************************************

#include "scmRTOS_CONFIG.h"
#include "scmRTOS_TARGET_CFG.h"

     module  scmRTOS_Asm

;-------------------------------------------------------------------------------
save_regs   macro

     push     r4
     push     r5
     push     r6
     push     r7
     push     r8
     push     r9
     push     r10
     push     r11
     push     r12
     push     r13
     push     r14
     push     r15

     endm
;-------------------------------------------------------------------------------
restore_regs   macro

     pop      r15
     pop      r14
     pop      r13
     pop      r12
     pop      r11
     pop      r10
     pop      r9
     pop      r8
     pop      r7
     pop      r6
     pop      r5
     pop      r4

     endm
;-------------------------------------------------------------------------------
   
     public  OS_Start

#if scmRTOS_CONTEXT_SWITCH_SCHEME == 0
    public  OS_ContextSwitcher
#endif 

     rseg  DATA16_Z(1)
     rseg  CODE(1)

;-------------------------------------------------------------------------------
OS_Start:
     mov.w  r12,SP
     jmp    L_RestoreContext

;-------------------------------------------------------------------------------
#if scmRTOS_CONTEXT_SWITCH_SCHEME == 0
OS_ContextSwitcher:
     push SR
     save_regs

     mov.w   SP,0(r12)
     mov.w   r14,SP

L_RestoreContext:
     restore_regs
     reti
#endif 
;-------------------------------------------------------------------------------
#if scmRTOS_CONTEXT_SWITCH_SCHEME == 1

    extern  OS_ContextSwitchStackData
    extern  OS_ContextSwitchHook

    common INTVEC(1)
    org   CONTEXT_SWITCH_ISR_VECTOR
    DC16  ContextSwitcher_ISR

    rseg CODE(1)

ContextSwitcher_ISR:
    save_regs
    mov   SP,r12
    call  #OS_ContextSwitchHook
    mov   r12,SP
L_RestoreContext:
    restore_regs
    reti

#endif // scmRTOS_CONTEXT_SWITCH_SCHEME
;-------------------------------------------------------------------------------

     end
;*******************************************************************************
